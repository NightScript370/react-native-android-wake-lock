{"version":3,"names":["_reactNative","require","_react","WakeLockNativeModule","NativeModules","RNWakeLock","exports","Error","WakeLockInterface","Platform","OS","Object","assign","setWakeLock","releaseWakeLock","isWakeLocked","Promise","resolve","useWakeLock","useEffect","_setWakeLock","apply","arguments","_asyncToGenerator2","default","_releaseWakeLock"],"sources":["index.ts"],"sourcesContent":["import { NativeModules, Platform } from \"react-native\";\r\nimport { WakeLockModule } from \"./types\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst WakeLockNativeModule: WakeLockModule = NativeModules.RNWakeLock;\r\n\r\nif (!WakeLockNativeModule) {\r\n  throw new Error(`react-native-android-wake-lock: Native Module is null. Steps to fix:\r\n• Run \\`react-native-link react-native-android-wake-lock\\` in the project root\r\n• Rebuild and run the app\r\n• Manually link the library if necessary\r\n• If you're getting this error while testing, you didn't read the README. #shame\r\nIf none of these fix the issue, open an issue on Github: https://github.com/gretzky/react-native-android-wake-lock`);\r\n}\r\n\r\nconst WakeLockInterface = Platform.OS === 'android' ? {\r\n  ...WakeLockNativeModule,\r\n  setWakeLock(): Promise<boolean> {\r\n    return WakeLockNativeModule.setWakeLock();\r\n  },\r\n  releaseWakeLock(): Promise<boolean> {\r\n    return WakeLockNativeModule.releaseWakeLock();\r\n  },\r\n  isWakeLocked(): Promise<boolean> {\r\n    return WakeLockNativeModule.isWakeLocked();\r\n  },\r\n} : {\r\n  setWakeLock(): Promise<boolean> {\r\n    return Promise.resolve(false);\r\n  },\r\n  releaseWakeLock(): Promise<boolean> {\r\n    return Promise.resolve(false);\r\n  },\r\n  isWakeLocked(): Promise<boolean> {\r\n    return Promise.resolve(false);\r\n  },\r\n};\r\n\r\nconst useWakeLock = () => {\r\n  useEffect(() => {\r\n    async function setWakeLock() {\r\n      await WakeLockInterface.setWakeLock();\r\n    }\r\n\r\n    setWakeLock();\r\n\r\n    return () => {\r\n      async function releaseWakeLock() {\r\n        await WakeLockInterface.releaseWakeLock;\r\n      }\r\n\r\n      releaseWakeLock();\r\n    };\r\n  }, []);\r\n};\r\n\r\nexport { WakeLockNativeModule, WakeLockInterface, useWakeLock };\r\n"],"mappings":"6UAAA,IAAAA,YAAA,CAAAC,OAAA,iBAEA,IAAAC,MAAA,CAAAD,OAAA,UAEA,GAAM,CAAAE,oBAAoC,CAAGC,0BAAa,CAACC,UAAU,CAACC,OAAA,CAAAH,oBAAA,CAAAA,oBAAA,CAEtE,GAAI,CAACA,oBAAoB,CAAE,CACzB,KAAM,IAAI,CAAAI,KAAK,CAAE;AACnB;AACA;AACA;AACA;AACA,mHAAmH,CAAC,CACpH,CAEA,GAAM,CAAAC,iBAAiB,CAAGC,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAAAC,MAAA,CAAAC,MAAA,IAC9CT,oBAAoB,EACvBU,WAAW,UAAAA,YAAA,CAAqB,CAC9B,MAAO,CAAAV,oBAAoB,CAACU,WAAW,CAAC,CAAC,CAC3C,CAAC,CACDC,eAAe,UAAAA,gBAAA,CAAqB,CAClC,MAAO,CAAAX,oBAAoB,CAACW,eAAe,CAAC,CAAC,CAC/C,CAAC,CACDC,YAAY,UAAAA,aAAA,CAAqB,CAC/B,MAAO,CAAAZ,oBAAoB,CAACY,YAAY,CAAC,CAAC,CAC5C,CAAC,GACC,CACFF,WAAW,UAAAA,YAAA,CAAqB,CAC9B,MAAO,CAAAG,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC,CAC/B,CAAC,CACDH,eAAe,UAAAA,gBAAA,CAAqB,CAClC,MAAO,CAAAE,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC,CAC/B,CAAC,CACDF,YAAY,UAAAA,aAAA,CAAqB,CAC/B,MAAO,CAAAC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC,CAC/B,CACF,CAAC,CAACX,OAAA,CAAAE,iBAAA,CAAAA,iBAAA,CAEF,GAAM,CAAAU,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxB,GAAAC,gBAAS,EAAC,UAAM,SACC,CAAAN,WAAWA,CAAA,SAAAO,YAAA,CAAAC,KAAA,MAAAC,SAAA,YAAAF,aAAA,EAAAA,YAAA,IAAAG,kBAAA,CAAAC,OAAA,EAA1B,WAA6B,CAC3B,KAAM,CAAAhB,iBAAiB,CAACK,WAAW,CAAC,CAAC,CACvC,CAAC,SAAAO,YAAA,CAAAC,KAAA,MAAAC,SAAA,GAEDT,WAAW,CAAC,CAAC,CAEb,MAAO,WAAM,SACI,CAAAC,eAAeA,CAAA,SAAAW,gBAAA,CAAAJ,KAAA,MAAAC,SAAA,YAAAG,iBAAA,EAAAA,gBAAA,IAAAF,kBAAA,CAAAC,OAAA,EAA9B,WAAiC,CAC/B,KAAM,CAAAhB,iBAAiB,CAACM,eAAe,CACzC,CAAC,SAAAW,gBAAA,CAAAJ,KAAA,MAAAC,SAAA,GAEDR,eAAe,CAAC,CAAC,CACnB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACR,CAAC,CAACR,OAAA,CAAAY,WAAA,CAAAA,WAAA"}