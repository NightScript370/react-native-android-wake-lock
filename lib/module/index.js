var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.useWakeLock=exports.WakeLockNativeModule=exports.WakeLockInterface=void 0;var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _reactNative=require("react-native");var _react=require("react");var WakeLockNativeModule=_reactNative.NativeModules.RNWakeLock;exports.WakeLockNativeModule=WakeLockNativeModule;if(!WakeLockNativeModule){throw new Error(`react-native-android-wake-lock: Native Module is null. Steps to fix:
• Run \`react-native-link react-native-android-wake-lock\` in the project root
• Rebuild and run the app
• Manually link the library if necessary
• If you're getting this error while testing, you didn't read the README. #shame
If none of these fix the issue, open an issue on Github: https://github.com/gretzky/react-native-android-wake-lock`);}var WakeLockInterface=_reactNative.Platform.OS==='android'?Object.assign({},WakeLockNativeModule,{setWakeLock:function setWakeLock(){return WakeLockNativeModule.setWakeLock();},releaseWakeLock:function releaseWakeLock(){return WakeLockNativeModule.releaseWakeLock();},isWakeLocked:function isWakeLocked(){return WakeLockNativeModule.isWakeLocked();}}):{setWakeLock:function setWakeLock(){return Promise.resolve(false);},releaseWakeLock:function releaseWakeLock(){return Promise.resolve(false);},isWakeLocked:function isWakeLocked(){return Promise.resolve(false);}};exports.WakeLockInterface=WakeLockInterface;var useWakeLock=function useWakeLock(){(0,_react.useEffect)(function(){function setWakeLock(){return _setWakeLock.apply(this,arguments);}function _setWakeLock(){_setWakeLock=(0,_asyncToGenerator2.default)(function*(){yield WakeLockInterface.setWakeLock();});return _setWakeLock.apply(this,arguments);}setWakeLock();return function(){function releaseWakeLock(){return _releaseWakeLock.apply(this,arguments);}function _releaseWakeLock(){_releaseWakeLock=(0,_asyncToGenerator2.default)(function*(){yield WakeLockInterface.releaseWakeLock;});return _releaseWakeLock.apply(this,arguments);}releaseWakeLock();};},[]);};exports.useWakeLock=useWakeLock;
//# sourceMappingURL=index.js.map